version: '3.8'

services:
  # Banco PostgreSQL
  postgres:
    image: postgres:15
    container_name: restaurant_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: restaurant
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Aplicação Next.js
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: restaurant_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres123@postgres:5432/restaurant
      NODE_ENV: production
      NEXT_TELEMETRY_DISABLED: 1
      APP_URL: http://localhost:3000
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: sua_chave_secreta_123456789
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local

# Nginx para proxy reverso em produção
nginx:
  image: nginx:alpine
  container_name: restaurant_nginx_prod
  restart: unless-stopped
  ports:
    - "80:80"
    - "443:443"
  volumes:
    - ./nginx.conf:/etc/nginx/nginx.conf:ro
    - ./ssl:/etc/nginx/ssl:ro
    - nginx_cache:/var/cache/nginx
  depends_on:
    app:
      condition: service_healthy
  networks:
    - restaurant_network
  healthcheck:
    test: ["CMD-SHELL", "curl -f http://localhost/health || exit 1"]
    interval: 30s
    timeout: 10s
    retries: 3

# Watchtower para atualizações automáticas (opcional)
watchtower:
  image: containrrr/watchtower
  container_name: restaurant_watchtower
  restart: unless-stopped
  volumes:
    - /var/run/docker.sock:/var/run/docker.sock
  environment:
    - WATCHTOWER_POLL_INTERVAL=300
    - WATCHTOWER_CLEANUP=true
    - WATCHTOWER_INCLUDE_STOPPED=true
  command: --interval 300 restaurant_app_prod restaurant_nginx_prod
  # Descomente se quiser atualizações automáticas
  # profiles:
  #   - watchtower

volumes:
  nginx_cache:
    driver: local

networks:
  restaurant_network:
    driver: bridge 